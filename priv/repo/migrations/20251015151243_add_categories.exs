defmodule LemonadeStand.Repo.Migrations.AddCategories do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    alter table(:parts) do
      add(:category_id, :uuid)
    end

    create table(:machines, primary_key: false) do
      add(:id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true)
    end

    create table(:machine_excluded_categories, primary_key: false) do
      add(
        :machine_id,
        references(:machines,
          column: :id,
          name: "machine_excluded_categories_machine_id_fkey",
          type: :uuid,
          prefix: "public"
        ),
        primary_key: true,
        null: false
      )

      add(:category_id, :uuid, null: false, primary_key: true)
    end

    create table(:categories, primary_key: false) do
      add(:id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true)
    end

    alter table(:parts) do
      modify(
        :category_id,
        references(:categories,
          column: :id,
          name: "parts_category_id_fkey",
          type: :uuid,
          prefix: "public"
        )
      )
    end

    alter table(:machine_excluded_categories) do
      modify(
        :category_id,
        references(:categories,
          column: :id,
          name: "machine_excluded_categories_category_id_fkey",
          type: :uuid,
          prefix: "public"
        )
      )
    end
  end

  def down do
    drop(constraint(:machine_excluded_categories, "machine_excluded_categories_category_id_fkey"))

    alter table(:machine_excluded_categories) do
      modify(:category_id, :uuid)
    end

    drop(constraint(:parts, "parts_category_id_fkey"))

    alter table(:parts) do
      modify(:category_id, :uuid)
    end

    drop(table(:categories))

    drop(constraint(:machine_excluded_categories, "machine_excluded_categories_machine_id_fkey"))

    drop(table(:machine_excluded_categories))

    drop(table(:machines))

    alter table(:parts) do
      remove(:category_id)
    end
  end
end
